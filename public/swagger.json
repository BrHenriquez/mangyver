{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"MenuRole": {
				"properties": {
					"id": {
						"type": "string"
					},
					"menu": {
						"$ref": "#/components/schemas/Menu"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"menu",
					"role",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Menu": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"URL": {
						"type": "string"
					},
					"roles": {
						"items": {
							"$ref": "#/components/schemas/MenuRole"
						},
						"type": "array"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"URL",
					"roles",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Role": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"menus": {
						"items": {
							"$ref": "#/components/schemas/MenuRole"
						},
						"type": "array"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"menus",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Zone": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"code",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Bus": {
				"properties": {
					"id": {
						"type": "string"
					},
					"zone": {
						"$ref": "#/components/schemas/Zone"
					},
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"zone",
					"name",
					"code",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Operation": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"bus": {
						"$ref": "#/components/schemas/Bus"
					},
					"code": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"bus",
					"code",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"isActive": {
						"type": "boolean"
					},
					"auth": {
						"type": "string"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"area": {
						"$ref": "#/components/schemas/Area"
					},
					"line": {
						"$ref": "#/components/schemas/Line"
					},
					"SAPCode": {
						"type": "string"
					},
					"SAPUser": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"username",
					"password",
					"email",
					"role",
					"isActive",
					"auth",
					"created",
					"operation",
					"area",
					"line",
					"SAPCode",
					"SAPUser"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Area": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					}
				},
				"required": [
					"id",
					"name",
					"code",
					"isActive",
					"created",
					"operation",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Line": {
				"properties": {
					"id": {
						"type": "string"
					},
					"area": {
						"$ref": "#/components/schemas/Area"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					}
				},
				"required": [
					"id",
					"area",
					"name",
					"SAPCode",
					"isActive",
					"created",
					"operation",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUserPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"isActive": {
						"type": "boolean"
					},
					"SAPCode": {
						"type": "string"
					},
					"SAPUser": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"area": {
						"$ref": "#/components/schemas/Area"
					},
					"line": {
						"$ref": "#/components/schemas/Line"
					}
				},
				"required": [
					"name",
					"username",
					"password",
					"email",
					"role",
					"isActive",
					"SAPCode",
					"SAPUser",
					"operation",
					"area",
					"line"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBusPayload": {
				"properties": {
					"zone": {
						"$ref": "#/components/schemas/Zone"
					},
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"zone",
					"name",
					"code",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IZonePayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"code",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IAreaPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"password",
					"email",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Equipment": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"area": {
						"$ref": "#/components/schemas/Area"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"code",
					"isActive",
					"area",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IEquipmentPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"password",
					"email",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProcessType": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Process": {
				"properties": {
					"id": {
						"type": "string"
					},
					"processId": {
						"type": "string"
					},
					"processType": {
						"$ref": "#/components/schemas/ProcessType"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"processId",
					"processType",
					"name",
					"SAPCode",
					"operation",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Card": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"process": {
						"$ref": "#/components/schemas/Process"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"operation",
					"process",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Priority": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"SAPCode",
					"operation",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LineMachine": {
				"properties": {
					"id": {
						"type": "string"
					},
					"line": {
						"$ref": "#/components/schemas/Line"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"line",
					"name",
					"SAPCode",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Component": {
				"properties": {
					"id": {
						"type": "string"
					},
					"machine": {
						"$ref": "#/components/schemas/LineMachine"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"machine",
					"name",
					"SAPCode",
					"operation",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Breakdown": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"operation",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TypeFail": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"shortName": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"SAPCode",
					"isActive",
					"shortName",
					"operation",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Affect": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"SAPCode",
					"operation",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Notice": {
				"properties": {
					"id": {
						"type": "string"
					},
					"numNotice": {
						"type": "number",
						"format": "double"
					},
					"otCode": {
						"type": "string"
					},
					"didCard": {
						"type": "string"
					},
					"failureTime": {
						"type": "string"
					},
					"departmentId": {
						"type": "string"
					},
					"lineId": {
						"$ref": "#/components/schemas/Line"
					},
					"cardTypeId": {
						"$ref": "#/components/schemas/Card"
					},
					"cardTitle": {
						"type": "string"
					},
					"priorityId": {
						"$ref": "#/components/schemas/Priority"
					},
					"componentsId": {
						"$ref": "#/components/schemas/Component"
					},
					"breakdownId": {
						"$ref": "#/components/schemas/Breakdown"
					},
					"failureTypeId": {
						"$ref": "#/components/schemas/TypeFail"
					},
					"affectsId": {
						"$ref": "#/components/schemas/Affect"
					},
					"affectsFile": {
						"type": "string"
					},
					"cardDescription": {
						"type": "string"
					},
					"processId": {
						"$ref": "#/components/schemas/Process"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"sapId": {
						"type": "string"
					},
					"equipmentId": {
						"$ref": "#/components/schemas/LineMachine"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"otCode",
					"didCard",
					"failureTime",
					"departmentId",
					"lineId",
					"cardTypeId",
					"cardTitle",
					"priorityId",
					"componentsId",
					"breakdownId",
					"failureTypeId",
					"affectsId",
					"affectsFile",
					"cardDescription",
					"processId",
					"user",
					"sapId",
					"equipmentId",
					"operation",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"INoticePayload": {
				"properties": {
					"otCode": {
						"type": "string"
					},
					"didCard": {
						"type": "string"
					},
					"failureTime": {
						"type": "string"
					},
					"department": {
						"type": "string"
					},
					"line": {
						"$ref": "#/components/schemas/Line"
					},
					"cardType": {
						"$ref": "#/components/schemas/Card"
					},
					"cardTitle": {
						"type": "string"
					},
					"priority": {
						"$ref": "#/components/schemas/Priority"
					},
					"components": {
						"$ref": "#/components/schemas/Component"
					},
					"breakdown": {
						"$ref": "#/components/schemas/Breakdown"
					},
					"failureType": {
						"$ref": "#/components/schemas/TypeFail"
					},
					"affects": {
						"$ref": "#/components/schemas/Affect"
					},
					"affectsFile": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"cardDescription": {
						"type": "string"
					},
					"process": {
						"$ref": "#/components/schemas/Process"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"sapId": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					}
				},
				"required": [
					"otCode",
					"didCard",
					"failureTime",
					"department",
					"line",
					"cardType",
					"cardTitle",
					"priority",
					"components",
					"breakdown",
					"failureType",
					"affects",
					"affectsFile",
					"cardDescription",
					"process",
					"user",
					"sapId",
					"operation"
				],
				"type": "object",
				"additionalProperties": false
			},
			"INoticenPayloadNewFormat": {
				"properties": {
					"processId": {
						"$ref": "#/components/schemas/Process"
					},
					"didCard": {
						"type": "string"
					},
					"failureTime": {
						"type": "string"
					},
					"department": {
						"type": "string"
					},
					"lineId": {
						"$ref": "#/components/schemas/Line"
					},
					"equipment": {
						"$ref": "#/components/schemas/Equipment"
					},
					"cardTypeId": {
						"$ref": "#/components/schemas/Card"
					},
					"cardTitle": {
						"type": "string"
					},
					"priorityId": {
						"$ref": "#/components/schemas/Priority"
					},
					"componentsId": {
						"$ref": "#/components/schemas/Component"
					},
					"breakdownId": {
						"$ref": "#/components/schemas/Breakdown"
					},
					"failureTypeId": {
						"$ref": "#/components/schemas/TypeFail"
					},
					"cardDescription": {
						"type": "string"
					},
					"affectsId": {
						"$ref": "#/components/schemas/Affect"
					},
					"otCode": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"affectsFile": {
						"type": "string"
					},
					"userId": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"isActive": {
						"type": "boolean",
						"enum": [
							"true"
						],
						"nullable": false
					},
					"sapId": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					}
				},
				"required": [
					"processId",
					"didCard",
					"failureTime",
					"department",
					"lineId",
					"equipment",
					"cardTypeId",
					"cardTitle",
					"priorityId",
					"componentsId",
					"breakdownId",
					"failureTypeId",
					"cardDescription",
					"affectsId",
					"otCode",
					"id",
					"affectsFile",
					"userId",
					"isActive",
					"sapId",
					"operation"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOperationPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"bus": {
						"$ref": "#/components/schemas/Bus"
					},
					"code": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"bus",
					"code",
					"password",
					"email",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Subarea": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"area": {
						"$ref": "#/components/schemas/Area"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"code",
					"SAPCode",
					"isActive",
					"area",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISubareaPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"area": {
						"$ref": "#/components/schemas/Area"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"code",
					"area",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Ubication": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"subarea": {
						"$ref": "#/components/schemas/Subarea"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"code",
					"subarea",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUbicationPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"subarea": {
						"$ref": "#/components/schemas/Subarea"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"code",
					"subarea",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Field": {
				"properties": {
					"id": {
						"type": "string"
					},
					"fieldType": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"optionsEndpoint": {
						"type": "string"
					},
					"validations": {
						"type": "string"
					},
					"childfield": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"fieldType",
					"label",
					"optionsEndpoint",
					"validations",
					"childfield"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IFieldPayload": {
				"properties": {
					"fieldType": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"optionsEndpoint": {
						"type": "string"
					},
					"validations": {
						"type": "string"
					},
					"childfield": {
						"type": "string"
					}
				},
				"required": [
					"fieldType",
					"label",
					"optionsEndpoint",
					"validations",
					"childfield"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Section": {
				"properties": {
					"id": {
						"type": "string"
					},
					"fields": {
						"$ref": "#/components/schemas/Field"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"fields",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISectionPayload": {
				"properties": {
					"fields": {
						"$ref": "#/components/schemas/Field"
					}
				},
				"required": [
					"fields"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICardPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"operation",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IComponentPayload": {
				"properties": {
					"machine": {
						"$ref": "#/components/schemas/LineMachine"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"machine",
					"name",
					"SAPCode",
					"operation",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Consecutive": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"SAPCode",
					"operation",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IConsecutivePayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"SAPCode",
					"operation",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ILinePayload": {
				"properties": {
					"area": {
						"$ref": "#/components/schemas/Area"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"area",
					"name",
					"SAPCode",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ILineMachinePayload": {
				"properties": {
					"line": {
						"$ref": "#/components/schemas/Line"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"line",
					"name",
					"SAPCode",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPriorityPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"SAPCode",
					"operation",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProcessTypePayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ITypeFailPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"shortname": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"SAPCode",
					"isActive",
					"operation",
					"shortname"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProcessPayload": {
				"properties": {
					"processType": {
						"$ref": "#/components/schemas/ProcessType"
					},
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"processType",
					"name",
					"SAPCode",
					"operation",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IAffectPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"SAPCode",
					"operation",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IBreakdownPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"SAPCode": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"SAPCode",
					"operation",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Deviation": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"operation",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IDeviationPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"operation",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OperationNumber": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"operation",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOperationNumberPayload": {
				"properties": {
					"name": {
						"type": "string"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"operation",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Notification": {
				"properties": {
					"id": {
						"type": "string"
					},
					"operationNumId": {
						"$ref": "#/components/schemas/OperationNumber"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"deviationId": {
						"$ref": "#/components/schemas/Deviation"
					},
					"otCode": {
						"type": "string"
					},
					"startHour": {
						"type": "string",
						"format": "date-time"
					},
					"endHour": {
						"type": "string",
						"format": "date-time"
					},
					"isDone": {
						"type": "boolean"
					},
					"comments": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"operationNumId",
					"operation",
					"deviationId",
					"otCode",
					"startHour",
					"endHour",
					"isDone",
					"comments",
					"user",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"INotificationPayload": {
				"properties": {
					"deviationId": {
						"$ref": "#/components/schemas/Deviation"
					},
					"operationNumId": {
						"$ref": "#/components/schemas/OperationNumber"
					},
					"operation": {
						"$ref": "#/components/schemas/Operation"
					},
					"otCode": {
						"type": "string"
					},
					"startHour": {
						"type": "string",
						"format": "date-time"
					},
					"endHour": {
						"type": "string",
						"format": "date-time"
					},
					"isDone": {
						"type": "boolean"
					},
					"comments": {
						"type": "string"
					}
				},
				"required": [
					"deviationId",
					"operationNumId",
					"operation",
					"otCode",
					"startHour",
					"endHour",
					"isDone"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IRolePayload": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"menus": {
						"items": {
							"$ref": "#/components/schemas/MenuRole"
						},
						"type": "array"
					},
					"isActive": {
						"type": "boolean"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"menus",
					"isActive",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "fixmaint",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Richard HC"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "take",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserPayload"
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"put": {
				"operationId": "UpdateUserStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/User"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/User"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/buses": {
			"get": {
				"operationId": "GetAllBus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Bus"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Bus"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateBus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Bus"
								}
							}
						}
					}
				},
				"tags": [
					"Bus"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IBusPayload"
							}
						}
					}
				}
			}
		},
		"/buses/{id}": {
			"get": {
				"operationId": "GetBus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Bus"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Bus"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/zones": {
			"get": {
				"operationId": "GetZones",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Zone"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Zone"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateZone",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Zone"
								}
							}
						}
					}
				},
				"tags": [
					"Zone"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IZonePayload"
							}
						}
					}
				}
			}
		},
		"/zones/{id}": {
			"get": {
				"operationId": "GetZone",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Zone"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Zone"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/areas": {
			"get": {
				"operationId": "GetAreas",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Area"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Area"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "operation",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateArea",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Area"
								}
							}
						}
					}
				},
				"tags": [
					"Area"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IAreaPayload"
							}
						}
					}
				}
			}
		},
		"/areas/{id}": {
			"get": {
				"operationId": "GetArea",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Area"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Area"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/equipments": {
			"get": {
				"operationId": "GetEquipments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Equipment"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Equipment"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateEquipment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Equipment"
								}
							}
						}
					}
				},
				"tags": [
					"Equipment"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IEquipmentPayload"
							}
						}
					}
				}
			}
		},
		"/equipments/{id}": {
			"get": {
				"operationId": "GetEquipment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Equipment"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Equipment"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/notices": {
			"get": {
				"operationId": "GetNotices",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Notice"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Notice"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "profileId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "top",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "from",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "dateFrom",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "dateEnd",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sapForm",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isWeb",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "timeFrom",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "timeEnd",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "operationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateNoticeNewFormat",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Notice"
								}
							}
						}
					}
				},
				"tags": [
					"Notice"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/INoticenPayloadNewFormat"
							}
						}
					}
				}
			}
		},
		"/notices/old_notice": {
			"post": {
				"operationId": "CreateNotice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Notice"
								}
							}
						}
					}
				},
				"tags": [
					"Notice"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/INoticePayload"
							}
						}
					}
				}
			}
		},
		"/notices/{id}": {
			"get": {
				"operationId": "GetNotice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Notice"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Notice"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/operations": {
			"get": {
				"operationId": "GetOperations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Operation"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Operation"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateOperation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Operation"
								}
							}
						}
					}
				},
				"tags": [
					"Operation"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IOperationPayload"
							}
						}
					}
				}
			}
		},
		"/operations/{id}": {
			"get": {
				"operationId": "GetOperation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Operation"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Operation"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/subareas": {
			"get": {
				"operationId": "GetSubareas",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Subarea"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Subarea"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateSubarea",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Subarea"
								}
							}
						}
					}
				},
				"tags": [
					"Subarea"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISubareaPayload"
							}
						}
					}
				}
			}
		},
		"/subareas/{id}": {
			"get": {
				"operationId": "GetSubarea",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Subarea"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Subarea"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/ubications": {
			"get": {
				"operationId": "GetUbications",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Ubication"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Ubication"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateUbication",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ubication"
								}
							}
						}
					}
				},
				"tags": [
					"Ubication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUbicationPayload"
							}
						}
					}
				}
			}
		},
		"/ubications/{id}": {
			"get": {
				"operationId": "GetUbication",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Ubication"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Ubication"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/fields": {
			"get": {
				"operationId": "GetFields",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Field"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Field"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateField",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Field"
								}
							}
						}
					}
				},
				"tags": [
					"Field"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IFieldPayload"
							}
						}
					}
				}
			}
		},
		"/fields/{id}": {
			"get": {
				"operationId": "GetField",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Field"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Field"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sections": {
			"get": {
				"operationId": "GetSections",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Section"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Section"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateSection",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Section"
								}
							}
						}
					}
				},
				"tags": [
					"Section"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISectionPayload"
							}
						}
					}
				}
			}
		},
		"/sections/{id}": {
			"get": {
				"operationId": "GetSection",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Section"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Section"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/cards": {
			"get": {
				"operationId": "GetCards",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Card"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Card"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "process",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateCard",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Card"
								}
							}
						}
					}
				},
				"tags": [
					"Card"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICardPayload"
							}
						}
					}
				}
			}
		},
		"/cards/{id}": {
			"get": {
				"operationId": "GetCard",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Card"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Card"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/components": {
			"get": {
				"operationId": "GetComponents",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Component"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Component"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateComponent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Component"
								}
							}
						}
					}
				},
				"tags": [
					"Component"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IComponentPayload"
							}
						}
					}
				}
			}
		},
		"/components/{id}": {
			"get": {
				"operationId": "GetComponent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Component"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Component"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/consecutives": {
			"get": {
				"operationId": "GetConsecutives",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Consecutive"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Consecutive"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateConsecutive",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Consecutive"
								}
							}
						}
					}
				},
				"tags": [
					"Consecutive"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IConsecutivePayload"
							}
						}
					}
				}
			}
		},
		"/consecutives/{id}": {
			"get": {
				"operationId": "GetConsecutive",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Consecutive"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Consecutive"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lines": {
			"get": {
				"operationId": "GetLines",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Line"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Line"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "areaId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateLine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Line"
								}
							}
						}
					}
				},
				"tags": [
					"Line"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ILinePayload"
							}
						}
					}
				}
			}
		},
		"/lines/{id}": {
			"get": {
				"operationId": "GetLine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Line"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Line"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/line-machines": {
			"get": {
				"operationId": "GetLineMachines",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/LineMachine"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"LineMachine"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "lineId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "qskip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "qtake",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateLineMachine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LineMachine"
								}
							}
						}
					}
				},
				"tags": [
					"LineMachine"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ILineMachinePayload"
							}
						}
					}
				}
			}
		},
		"/line-machines/{id}": {
			"get": {
				"operationId": "GetLineMachine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/LineMachine"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"LineMachine"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/priorities": {
			"get": {
				"operationId": "GetPriorities",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Priority"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Priority"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreatePriority",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Priority"
								}
							}
						}
					}
				},
				"tags": [
					"Priority"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IPriorityPayload"
							}
						}
					}
				}
			}
		},
		"/priorities/{id}": {
			"get": {
				"operationId": "GetPriority",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Priority"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Priority"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/process-types": {
			"get": {
				"operationId": "GetProcessTypes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ProcessType"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"ProcessType"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateProcessType",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProcessType"
								}
							}
						}
					}
				},
				"tags": [
					"ProcessType"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProcessTypePayload"
							}
						}
					}
				}
			}
		},
		"/process-types/{id}": {
			"get": {
				"operationId": "GetProcessType",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ProcessType"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"ProcessType"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/type-fails": {
			"get": {
				"operationId": "GetTypeFails",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TypeFail"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"TypeFail"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateTypeFail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TypeFail"
								}
							}
						}
					}
				},
				"tags": [
					"TypeFail"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ITypeFailPayload"
							}
						}
					}
				}
			}
		},
		"/type-fails/{id}": {
			"get": {
				"operationId": "GetTypeFail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/TypeFail"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"TypeFail"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/processes": {
			"get": {
				"operationId": "GetProceses",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Process"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Process"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateProcess",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Process"
								}
							}
						}
					}
				},
				"tags": [
					"Process"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProcessPayload"
							}
						}
					}
				}
			}
		},
		"/processes/{id}": {
			"get": {
				"operationId": "GetProcess",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Process"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Process"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/affects": {
			"get": {
				"operationId": "GetAffects",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Affect"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Affect"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateAffect",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Affect"
								}
							}
						}
					}
				},
				"tags": [
					"Affect"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IAffectPayload"
							}
						}
					}
				}
			}
		},
		"/affects/{id}": {
			"get": {
				"operationId": "GetAffect",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Affect"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Affect"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/breakdowns": {
			"get": {
				"operationId": "GetBreakdowns",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Breakdown"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Breakdown"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateBreakdown",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Breakdown"
								}
							}
						}
					}
				},
				"tags": [
					"Breakdown"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IBreakdownPayload"
							}
						}
					}
				}
			}
		},
		"/breakdowns/{id}": {
			"get": {
				"operationId": "GetBreakdown",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Breakdown"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Breakdown"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/deviations": {
			"get": {
				"operationId": "GetDeviations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Deviation"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Deviation"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "operation",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateDeviation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Deviation"
								}
							}
						}
					}
				},
				"tags": [
					"Deviation"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IDeviationPayload"
							}
						}
					}
				}
			}
		},
		"/deviations/{id}": {
			"get": {
				"operationId": "GetDeviation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Deviation"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Deviation"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/operation-number": {
			"get": {
				"operationId": "GetOperationNumbers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/OperationNumber"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"OperationNumber"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "operation",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateOperationNumber",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OperationNumber"
								}
							}
						}
					}
				},
				"tags": [
					"OperationNumber"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IOperationNumberPayload"
							}
						}
					}
				}
			}
		},
		"/operation-number/{id}": {
			"get": {
				"operationId": "GetOperationNumber",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/OperationNumber"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"OperationNumber"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/notifications": {
			"get": {
				"operationId": "GetNotifications",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Notification"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Notification"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "profileId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "top",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "from",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "dateFrom",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "dateEnd",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sapForm",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateNotification",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Notification"
								}
							}
						}
					}
				},
				"tags": [
					"Notification"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/INotificationPayload"
							}
						}
					}
				}
			}
		},
		"/notifications/{id}": {
			"get": {
				"operationId": "GetNotification",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Notification"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Notification"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/roles": {
			"get": {
				"operationId": "GetRoles",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Role"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Role"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Role"
								}
							}
						}
					}
				},
				"tags": [
					"Role"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IRolePayload"
							}
						}
					}
				}
			}
		},
		"/roles/{id}": {
			"get": {
				"operationId": "GetRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Role"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Role"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/fnmobile": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Process"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/process-web": {
			"get": {
				"operationId": "GetProceses",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Process"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"ProcessWeb"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateProcess",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Process"
								}
							}
						}
					}
				},
				"tags": [
					"ProcessWeb"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProcessPayload"
							}
						}
					}
				}
			}
		},
		"/process-web/{id}": {
			"get": {
				"operationId": "GetProcess",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Process"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"ProcessWeb"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}